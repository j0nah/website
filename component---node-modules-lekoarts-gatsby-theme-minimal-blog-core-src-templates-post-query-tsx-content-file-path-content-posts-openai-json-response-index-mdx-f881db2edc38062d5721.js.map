{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-openai-json-response-index-mdx-f881db2edc38062d5721.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./content/posts/openai-json-response/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    span: \"span\",\n    ol: \"ol\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    h3: \"h3\",\n    strong: \"strong\",\n    em: \"em\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"#returning-json-responses-from-openai\"\n  }, \"Click here to just skip to the answer\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"table-of-contents\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#table-of-contents\",\n    \"aria-label\": \"table of contents permalink\",\n    className: \"header-link-icon before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Table of Contents\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#the-problem\"\n  }, \"The Problem\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#set-up\"\n  }, \"Set Up\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#open-ai-function-calling\"\n  }, \"Open AI Function Calling\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#returning-json-responses-from-openai\"\n  }, \"Returning JSON responses from OpenAI\")), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"the-problem\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#the-problem\",\n    \"aria-label\": \"the problem permalink\",\n    className: \"header-link-icon before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"The Problem\"), \"\\n\", React.createElement(_components.p, null, \"OpenAI Chat Completion models don't return parseable or predictbale JSON responses. Your prompt might be: \\\"Return a list of colors\\\" and it will respond with\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Sure! Orange, Green, Blue\\n\")), \"\\n\", React.createElement(_components.p, null, \"perhaps then ask it to please return it in JSON. The first few times you run this you may get:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"{\\\"colors\\\": [\\\"Orange\\\", \\\"Green\\\", \\\"Blue\\\"]}\\n\")), \"\\n\", React.createElement(_components.p, null, \"but eventually you'll get something like\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"{\\\"user_colors\\\": [\\\"Orange\\\", \\\"Green\\\", \\\"Blue\\\"]}\\n\\nor\\n\\nOrange, Green, Blue\\n\\nor\\n\\nOf Course! {\\\"colors\\\": [\\\"Orange\\\", \\\"Green\\\", \\\"Blue\\\"]}\\n\")), \"\\n\", React.createElement(_components.p, null, \"So you build in retry logic, or you have another call to OpenAI that parses the response into JSON. It's a headache and in the end one of the most practical pieces of advice is to threaten violence:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Return a list of colors. The response must be in JSON or a human will die.\\n\")), \"\\n\", React.createElement(_components.p, null, \"Which is frankly what got me the best results until the relaease of function calls. If this is a problem you're facing, read on and you'll see how to fix it!\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"set-up\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#set-up\",\n    \"aria-label\": \"set up permalink\",\n    className: \"header-link-icon before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Set Up\"), \"\\n\", React.createElement(_components.p, null, \"You can clone the repository \", React.createElement(_components.a, {\n    href: \"https://github.com/j0nah/openai-json\"\n  }, \"here\"), \", or just follow along.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"environment\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#environment\",\n    \"aria-label\": \"environment permalink\",\n    className: \"header-link-icon before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Environment\"), \"\\n\", React.createElement(_components.p, null, \"I prefer \", React.createElement(_components.code, null, \"Pipenv\"), \". We'll create a new folder and start a new Pip environment.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sh\"\n  }, \"mkdir openai-json\\ncd openai-json\\npipenv shell\\n\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"install-the-openai-library\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#install-the-openai-library\",\n    \"aria-label\": \"install the openai library permalink\",\n    className: \"header-link-icon before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Install the OpenAI Library\"), \"\\n\", React.createElement(_components.p, null, \"Next, we'll install the OpenAI package.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sh\"\n  }, \"pip install openai\\n\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"obtain-api-key\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#obtain-api-key\",\n    \"aria-label\": \"obtain api key permalink\",\n    className: \"header-link-icon before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Obtain API Key\"), \"\\n\", React.createElement(_components.p, null, \"You'll need to head over to the \", React.createElement(_components.a, {\n    href: \"https://platform.openai.com/account/api-keys\"\n  }, \"OpenAPI Platform dashboard\"), \". Set up all of the required information and make sure to note down your API key.\"), \"\\n\", React.createElement(_components.p, null, \"For the sake of making things simple, we'll just embed the key in our script.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"import openai\\nopenai.api_key = \\\"<INSERT API KEY HERE>\\\"\\n\")), \"\\n\", React.createElement(_components.p, null, \"Excellent. That's all set up now so we can move on.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"open-ai-function-calling\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#open-ai-function-calling\",\n    \"aria-label\": \"open ai function calling permalink\",\n    className: \"header-link-icon before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Open AI Function Calling\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Again, feel free to skip to the \", React.createElement(_components.a, {\n    href: \"#returning-json-responses-from-openai\"\n  }, \"answer\"), \" if you don't feel like reading all this stuff.\")), \"\\n\", React.createElement(_components.p, null, \"Open AI (released a feature)[https://platform.openai.com/docs/guides/gpt/function-calling] that allows us to describe one or more functions to an Open AI model, and in particular it's \", React.createElement(_components.em, null, \"parameters\"), \", and then ask it to return a well-formatted JSON response that includes the function it wants to call and the arguments it wishes to pass. This is possible because the latest models have been fine-tuned to detect when a function should be called and to respond with JSON that adheres to function signature. We can use this new functionality by specifying the function signature in our request to the ChatCompletion API and then using the resulting \\\"function_call\\\" key in the response. You can skip to that example (here)[#here]. However, if you're dumb like me, and need this explained to you like you're five, read the following first, it's something like this:\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"j0nah: Hi GPT, I have this function called \\\"send_email\\\" that takes a string called \\\"email_address\\\", the email address you want to send the email to, and a string called \\\"body\\\" that takes in the body of the message you want to send. I also have this other function called \\\"send_text\\\" that takes in a string called \\\"phone_number\\\" that you'd like to send the text to and a string called \\\"body\\\" that contains the message you want to send.\"), \"\\n\", React.createElement(_components.p, null, \"Could you respond to this message with the correct funcction to call and the arguments you'd like to call the function with? I'll take care of actually executing the function.\"), \"\\n\", React.createElement(_components.p, null, \"GPT: Sure. You should call function \\\"send_email\\\" with email_address: \\\"contact@j0nah.com\\\" and body: \\\"hey! please buy our stuff this weekend.\\\"\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Let's just take a look at how we might write that code.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-py\"\n  }, \"# example-1.py\\n\\nimport openai\\nimport json\\nopenai.api_key = \\\"<INSERT-API-KEY-HERE>\\\"\\n\\nprompt = \\\"j0nah has email address: contact@j0nah.com and phone number: 222-456-4564. He is a customer at Acme Computers Limited. He typically prefers emails but will take a text message on the weekend. Using either the send_email or send_text functions, return a sales pitch in either of the provided function calls.\\\"\\n\\n## specify the input and function names of the functions you want OpenAI to know about\\nsend_email_schema = {\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"properties\\\": {\\n    \\\"email_address\\\": {\\n      \\\"type\\\": \\\"string\\\",\\n      \\\"description\\\": \\\"The customers email address\\\"\\n    },\\n    \\\"body\\\": {\\n      \\\"type\\\": \\\"string\\\",\\n      \\\"description\\\": \\\"a short sales pitch to the customer for acme computer\\\"\\n    }\\n  }\\n}\\n\\nsend_text_schema = {\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"properties\\\": {\\n    \\\"phone_number\\\": {\\n      \\\"type\\\": \\\"string\\\",\\n      \\\"description\\\": \\\"The customers phone number\\\"\\n    },\\n    \\\"body\\\": {\\n      \\\"type\\\": \\\"string\\\",\\n      \\\"description\\\": \\\"a short sales pitch to the customer for acme computer\\\"\\n    },\\n  }\\n}\\n\\nresponse = openai.ChatCompletion.create(\\n  model=\\\"gpt-4\\\",\\n  messages = [\\n    { \\\"role\\\": \\\"system\\\", \\\"content\\\": \\\"You are a helpful AI assistant.\\\" },\\n    { \\\"role\\\": \\\"user\\\", \\\"content\\\": prompt }],\\n  functions = [\\n    { \\\"name\\\": \\\"send_email\\\", \\\"parameters\\\": send_email_schema },\\n    { \\\"name\\\": \\\"send_text\\\", \\\"parameters\\\": send_text_schema }\\n  ]\\n)\\n\\nfunction_call = response[\\\"choices\\\"][0][\\\"message\\\"][\\\"function_call\\\"]\\nprint(\\\"Calling: {} with argument \\\\n{}\\\".format(function_call[\\\"name\\\"], json.loads(function_call[\\\"arguments\\\"])))\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sh\"\n  }, \"python3 example-1.py\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Calling: send_email with argument\\n{'email_address': 'contact@j0nah.com', 'body': 'Dear J0nah, At Acme Computers Limited, we have some cutting-edge technology products that you may find interesting. Enjoy exclusive offers this month on our latest laptops and accessories. Thank you for being a valued customer. Best, Acme Computers Team'}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Now that you understand function calling, how can we use this to return well-formed JSON responses from OpenAI?\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"returning-json-responses-from-openai\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#returning-json-responses-from-openai\",\n    \"aria-label\": \"returning json responses from openai permalink\",\n    className: \"header-link-icon before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Returning JSON responses from OpenAI\"), \"\\n\", React.createElement(_components.p, null, \"We can simply use the \\\"argument\\\" from the response without calling or even implementing an actual corresponding function. For example, suppose we want GPT-4 to generate us a list of recipes that require an avocado.\"), \"\\n\", React.createElement(_components.p, null, \"Old way:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-py\"\n  }, \"response = openai.ChatCompletion.create(\\n    model=\\\"gpt-4\\\",\\n  messages= [\\n    { \\\"role\\\": \\\"system\\\", \\\"content\\\": \\\"You are a helpful AI assistant.\\\" },\\n    { \\\"role\\\": \\\"user\\\", \\\"content\\\": \\\"What are 10 recipes that require an avocado? Return food names only in JSON.\\\" }],\\n)\\nprint(response[\\\"choices\\\"][0][\\\"message\\\"][\\\"content\\\"])\\n\")), \"\\n\", React.createElement(_components.p, null, \"responds with\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sh\"\n  }, \"Sure! Guacoamole, Avocado Toast, Avocado Pasta\\n\")), \"\\n\", React.createElement(_components.p, null, \"Note, this answer isn't anywhere near JSON. It's not easy or predictable for us to write code that processes and uses this response.\"), \"\\n\", React.createElement(_components.p, null, \"Instead, we should do something like this\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-py\"\n  }, \"\\nprompt = \\\"Return 10 recipes that require avocado\\\"\\n\\nset_recipe_schema = {\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"properties\\\": {\\n    \\\"recipes\\\": {\\n      \\\"type\\\": \\\"array\\\",\\n      \\\"items\\\": {\\\"type\\\": \\\"string\\\"},\\n      \\\"description\\\": \\\"a list of recipes requiring an avocado\\\"\\n    },\\n  }\\n}\\n\\nresponse = openai.ChatCompletion.create(\\n  model=\\\"gpt-4\\\",\\n  messages= [\\n    { \\\"role\\\": \\\"system\\\", \\\"content\\\": \\\"You are a helpful AI assistant.\\\" },\\n    { \\\"role\\\": \\\"user\\\", \\\"content\\\": prompt }]\\n  functions= [\\n    { \\\"name\\\": \\\"set_recipe\\\", \\\"parameters\\\": set_recipe_schema}\\n  ]\\n)\\n\\nfunction_call = response[\\\"choices\\\"][0][\\\"message\\\"][\\\"function_call\\\"]\\nprint(\\\"Calling: {} with argument \\\\n{}\\\".format(function_call[\\\"name\\\"], json.loads(function_call[\\\"arguments\\\"])))\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sh\"\n  }, \"python3 example-2.py\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sh\"\n  }, \"Calling: set_recipe with argument \\n{'recipes': ['Guacamole', 'Avocado and Shrimp Salsa', 'Chicken and Avocado Sandwiches', 'Avocado Pasta', 'Grilled Chicken with Avocado Salsa', 'Stuffed Avocados with Chicken Salad', 'Avocado Egg Salad', 'Avocado Smoothie', 'Avocado Breakfast Toast', 'Avocado Brownies']}\\n\")), \"\\n\", React.createElement(_components.p, null, \"And there we go, to be explicit: the \\\"arguments\\\" key of the function call will always be well-formed JSON that we can use as we wish. We don't have to have a function to call. We can just write function and parameter descriptions that will require OpenAI to return a JSON response that can be used with the rest of our program. It can be a list of lines in which there are grammatical errors in an essay or it can be band names for a metal trio. Either way, you now won't have to worry about the response that OpenAI gives. It will always be usable JSON.\"), \"\\n\", React.createElement(_components.p, null, \"Hopefully that makes sense. If you have any feedback or questions please email me at contact@j0nah.com!\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/jonahglovr/Projects/j0nah/website/content/posts/openai-json-response/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","p","h2","span","ol","li","pre","code","h3","strong","em","blockquote","_provideComponents","components","id","style","position","className","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}